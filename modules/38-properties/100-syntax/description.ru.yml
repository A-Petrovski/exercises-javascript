---

name: Свойства
theory: |


instructions: |

  Данные, которыми мы оперируем в своих программах могут обладать важными свойствами, например, у строк есть длина. Как вы увидите далее, это свойство очень важно для реализации алгоритмов, связанных с преобразованием строки (как пример переворот строки). Как узнать длину строки? Во многих языках длина строки вычисляется с помощью специальной функции и выглядит это примерно так:

  ```javascript
  import { length } from './string';
  const name = 'Robb';
  console.log(length(name)); // => 4
  ```

  В JavaScript свойства встроены прямо в язык. Они указываются через точку сразу после переменной (или константы):

  ```javascript
  const name = 'Robb';
  console.log(name.length); // => 4
  ```

  Свойства как и выражения (а они и есть выражения), возвращают значение, а значит их можно использовать во всех операциях, которые мы рассматривали ранее.

  _Вопрос для самопроверки. Что распечает код `console.log(name[name.length])` для `name` определенного выше? Почему такой ответ?_

  Свойства связаны с данными, у которых они берутся. Для примитивных типов свойства описаны в документации посвященной типу, например, [строк](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String), а у чисел их вообще нет.

  Однако, JavaScript позволяет обращаться к свойствам которые не существуют (например при опечатках). В таком случае его значением является `undefined`:

    ```javascript
    const name = 'Robb';
    console.log(name.whatIsThat); // undefined
    ```

  Кроме того, к свойствам можно обращаться используя квадратные скобки.

  ```javascript
  const name = 'Robb';
  console.log(name['length']); // 4
  ```

  Не следует путать такое обращение с взятием символа в строке по его индексу. Хотя синтаксически используются те же ограничители, все же, между этими операциями ничего общего. Квадратные скобки удобны в тех ситуациях, когда имя свойства вычисляется динамически.

  ```javascript
  const property = 'length';
  const name = 'Robb';
  console.log(name[property]); // 4
  ```

tips: []
