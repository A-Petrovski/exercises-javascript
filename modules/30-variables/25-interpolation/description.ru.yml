---

name: Интерполяция
theory: |

  В уроке про конкатенацию перед нами стояла задача создать заголовок письма из двух переменных и знаков препинания. Вы скорее всего решили задачу так:

  ```javascript
  const firstName = 'Joffrey';
  const greeting = 'Hello';

  console.log(greeting + ", " + firstName + "!");
  ```

  Это довольно простой случай, но — наверное, вы согласитесь — выглядит это немного безобразно. Нужно следить за несколькими кавычками и пробелами, и без вглядывания не понять, где что начинается и кончается.

  Есть другой, более удобный и изящный способ решения той же задачи — **интерполяция**. Вот, как это выглядит:

  ```javascript
  const firstName = 'Joffrey';
  const greeting = 'Hello';

  console.log(`${greeting}, ${firstName}!`);
  ```

  Мы просто создали одну строку и «вставили» в неё в нужные места переменные с помощью знака доллара и фигурных скобок `${ }`. Получился как будто бланк, куда внесены нужные значения. И нам не нужно больше заботиться об отдельных строках для знаков препинания и пробелов — все эти символы просто записаны в этой строке-шаблоне.

  В одной строке можно делать сколько угодно подобных блоков.

  **Интерполяция работает только со строками в [бэктиках](https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%88%D0%B8%D0%BD%D0%BE%D0%BF%D0%B8%D1%81%D0%BD%D1%8B%D0%B9_%D0%BE%D0%B1%D1%80%D0%B0%D1%82%D0%BD%D1%8B%D0%B9_%D0%B0%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D1%84).**

  Почти во всех языках интерполяция предпочтительнее конкатенации для объединения строк. Строка при этом получается склеенная, и внутри неё хорошо просматриваются пробелы и другие символы.

instructions: |

  Выведите на экран строку `Do you want to eat, <name>?`. Где вместо `<name>` должна использоваться переменная `stark`.


tips: []

definitions:
  - name: "Интерполяция"
    description: "способ соединения строк через вставку значений переменных в строку-шаблон с помощью фигурных скобок. Например, `\"Hi, {name}!\"`."
