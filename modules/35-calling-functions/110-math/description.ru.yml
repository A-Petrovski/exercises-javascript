---

name: Математические функции JS
theory: |

  Объяснение функций в JS немного осложняется структурой языка. Изначально он появился в браузерах и имел сильно ограниченные возможности по отношению к языкм общего назначения. Со временем все изменилось и JS стал мощным языком захвативший клиентскую разработку и активно использующийся на сервере, но наследие осталось, так как нужно поддерживать обратную совместимость. Поэтому в некоторых местах есть несостыковки, которые нельзя объяснить системой, можно только махнуть рукой и сказать "так исторически сложилось".

  К подобным "местам" относятся математические функции. Рассмотрим работу встроенной функции *pow*:

  ```javascript
  Math.pow(2, 3); // 8
  ```

  Что такое `Math`? Технически это объект доступный из любого места программы, но перед тем как говорить об объектах, нужно проделать очень большой путь. Сейчас достаточно запомнить, что функции для математических операций вызываются через `Math.`. Наличие этой приставки, никак не влияет на понятие функции, которое мы рассмотрели ранее и будем рассматривать позже.

  Полный список функций Math доступен в [документации](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math). О том как ее правильно читать, мы поговорим далее.

instructions: |

  В 7 королевствах жил один человек, который имел доступ к компьютерам и умел программировать — Сэм Тарли. Он занимался картографией, поэтому он написал для себя функцию `calculateDistance`, высчитываущую расстояние (в лигах) между  городами. Функция принимает два строковых параметра — два названия городов, и возвращает число — расстояние между ними.

  Вот пример использования, где на экран выводится расстояние между Lannisport и Bayasabhad:

  ```php
  <?php

  use function HexletBasics\Functions\calculateDistance;

  $distance = calculateDistance('Lannisport', 'Bayasabhad');
  print_r($distance);
  ```

  Первая строчка — это специальный код, подключающий функцию `calculateDistance` в вашу программу. Благодаря ней вы можете запускать функцию, но не видите её содержимое. Это обычное дело в программировании: вы знаете, **что** делает функция и как ей пользоваться, но не знаете **как именно** она работает внутри.

  Воспользуйтесь функцией `calculateDistance` и выведите на экран расстояние между городами Qarth и Vaes Dothrak. Не копируйте пример, а создайте переменную с другим именем и напишите код с нуля самостоятельно.

tips: []

definitions:
  - name: Функция
    description: "операция, способная принимать данные и возвращать результат; функция вызывается так: `foo()`."
  - name: Аргумент
    description: "информация, которую функция получает при вызове. Например, `foo(42)` — передача аргумента `42` функции `foo`"
